import streamlit as st
import random
from datetime import datetime
import pytz # ‡πÄ‡∏û‡∏¥‡πà‡∏° library ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤

# --- ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ---
st.set_page_config(page_title="üéØ ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î", layout="centered")

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
BKK_TIMEZONE = pytz.timezone("Asia/Bangkok")

# --- DATA ---
lottery_list = [
    "‡∏ô‡∏¥‡πÄ‡∏Ñ‡∏≠‡∏¥‡πÄ‡∏ä‡πâ‡∏≤", "‡∏à‡∏µ‡∏ô‡πÄ‡∏ä‡πâ‡∏≤", "‡∏´‡∏∏‡πâ‡∏ô‡∏Æ‡∏±‡πà‡∏á‡πÄ‡∏™‡πá‡∏á‡πÄ‡∏ä‡πâ‡∏≤", "‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ï‡πâ‡∏´‡∏ß‡∏±‡∏ô",
    "‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ", "‡∏´‡∏∏‡πâ‡∏ô‡∏ô‡∏¥‡∏Ñ‡πÄ‡∏Ñ‡∏≠‡∏¥‡∏ö‡πà‡∏≤‡∏¢", "‡∏´‡∏∏‡πâ‡∏ô‡∏à‡∏µ‡∏ô‡∏ö‡πà‡∏≤‡∏¢", "‡∏´‡∏∏‡πâ‡∏ô‡∏Æ‡∏±‡πà‡∏á‡πÄ‡∏™‡πá‡∏á‡∏ö‡πà‡∏≤‡∏¢",
    "‡∏´‡∏∏‡πâ‡∏ô‡∏™‡∏¥‡∏á‡∏Ñ‡πÇ‡∏õ‡∏£‡πå", "‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡πÄ‡∏¢‡πá‡∏ô", "‡∏´‡∏∏‡πâ‡∏ô‡∏≠‡∏¥‡∏ô‡πÄ‡∏î‡∏µ‡∏¢", "‡∏´‡∏∏‡πâ‡∏ô‡∏≠‡∏µ‡∏¢‡∏¥‡∏õ‡∏ï‡πå"
]

# --- FUNCTIONS ---
def generate_numbers():
    position = random.choice(["‡∏ö‡∏ô", "‡∏•‡πà‡∏≤‡∏á"])
    numbers = [f"{random.randint(0, 99):02d}" for _ in range(6)]
    return position, numbers

# --- UI LAYOUT ---

# 1. ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header)
st.markdown("<h2 style='text-align: center;'>üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î</h2>", unsafe_allow_html=True)
# ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
current_time_bkk = datetime.now(BKK_TIMEZONE)
st.markdown(f"<p style='text-align: center;'>üìÖ {current_time_bkk.strftime('%d/%m/%Y')}</p>", unsafe_allow_html=True)
st.divider()

# 2. ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç (Lottery Selection)
st.markdown("#### ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°")

selected_lottery = st.selectbox(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ß‡∏¢:",
    lottery_list,
    label_visibility="collapsed"
)

if st.button("üé∞ ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡πÄ‡∏•‡∏¢!", use_container_width=True, type="primary"):
    pos, nums = generate_numbers()
    
    # ‡πÉ‡∏ä‡πâ st.session_state ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    st.session_state.temp_result = (pos, nums)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    result_text = f"**{selected_lottery}** | {pos}: **{', '.join(nums)}**"
    timestamp = datetime.now(BKK_TIMEZONE).strftime('%H:%M:%S')
    
    # **[‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç]** ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏•‡∏á‡πÉ‡∏ô st.cache_data ‡πÅ‡∏ó‡∏ô session_state
    if 'history_log' not in st.session_state:
        st.session_state.history_log = []
    st.session_state.history_log.insert(0, f"üïí {timestamp} - {result_text}")


# 3. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (Latest Result Display)
if 'temp_result' in st.session_state:
    pos, nums = st.session_state.temp_result
    
    st.markdown("---")
    st.markdown(f"#### ‡∏ú‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á **{selected_lottery}**")
    
    col1, col2 = st.columns([1, 2])
    with col1:
        st.metric(label="‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á", value=pos)
    with col2:
        st.markdown(f"**‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î:**")
        st.markdown(f"<h3 style='color: #FF4B4B;'>{', '.join(nums)}</h3>", unsafe_allow_html=True)

st.divider()

# 4. ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ (History Section)
with st.expander("üìú ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", expanded=True):
    # **[‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç]** ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å st.session_state.history_log
    if 'history_log' in st.session_state and st.session_state.history_log:
        if st.button("üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥", use_container_width=True):
            st.session_state.history_log = []
            st.rerun()

        st.markdown("---")
        for entry in st.session_state.history_log:
            st.info(entry)
    else:
        st.write("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç")